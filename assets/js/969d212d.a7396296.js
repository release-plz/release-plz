"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4656],{8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>a});var n=r(6540);const t={},i=n.createContext(t);function o(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:s},e.children)}},9840:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"why","title":"Why yet another release tool","description":"New Rust apps and rewrites are mushrooming every day.","source":"@site/docs/why.md","sourceDirName":".","slug":"/why","permalink":"/docs/why","draft":false,"unlisted":false,"editUrl":"https://github.com/release-plz/release-plz/tree/main/website/docs/why.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"FAQ","permalink":"/docs/faq"},"next":{"title":"Troubleshooting","permalink":"/docs/troubleshooting"}}');var t=r(4848),i=r(8453);const o={},a="Why yet another release tool",l={},c=[{value:"API breaking change detection",id:"api-breaking-change-detection",level:2},{value:"Differences with release-please",id:"differences-with-release-please",level:2},{value:"No configuration needed \ud83d\udc4d",id:"no-configuration-needed-",level:3},{value:"Versions retrieved from the cargo registry \ud83d\udc4d",id:"versions-retrieved-from-the-cargo-registry-",level:3},{value:"Conventional commits aren&#39;t required \ud83d\udc4d",id:"conventional-commits-arent-required-",level:3},{value:"No multiple programming languages support \ud83d\udc4e",id:"no-multiple-programming-languages-support-",level:3},{value:"Differences with other Rust release tools",id:"differences-with-other-rust-release-tools",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"why-yet-another-release-tool",children:"Why yet another release tool"})}),"\n",(0,t.jsx)(s.p,{children:"New Rust apps and rewrites are mushrooming every day.\nChoosing which tools to add to your developer toolbox is becoming harder and harder."}),"\n",(0,t.jsx)(s.p,{children:"I feel obliged to explain why I created this project and how it compares with\nsimilar tools."}),"\n",(0,t.jsx)(s.h2,{id:"api-breaking-change-detection",children:"API breaking change detection"}),"\n",(0,t.jsxs)(s.p,{children:["Release-plz is the only release tool that integrates\n",(0,t.jsx)(s.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"}),"\nto detect API breaking changes and avoid breaking users builds:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"if the change was not intentional, maintainers can revert the breaking change\nbefore releasing the new version."}),"\n",(0,t.jsx)(s.li,{children:"if the change was intentional, maintainers can safely merge the release PR\nbecause it bumps the major version."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"differences-with-release-please",children:"Differences with release-please"}),"\n",(0,t.jsxs)(s.p,{children:["Like release-plz, ",(0,t.jsx)(s.a,{href:"https://github.com/googleapis/release-please",children:"release-please"}),"\nis an open-source project that manages releases via pull requests.\nHowever, there are some differences."]}),"\n",(0,t.jsx)(s.h3,{id:"no-configuration-needed-",children:"No configuration needed \ud83d\udc4d"}),"\n",(0,t.jsxs)(s.p,{children:["Release-please requires two configuration files in cargo workspaces: ",(0,t.jsx)(s.code,{children:".release-please-manifest.json"}),"\nand ",(0,t.jsx)(s.code,{children:"release-please-config.json"}),".\nMost of the fields you have to write in these two files are already in the\n",(0,t.jsx)(s.code,{children:"Cargo.toml"})," files."]}),"\n",(0,t.jsxs)(s.p,{children:["Release-plz obtains all the information it needs from the ",(0,t.jsx)(s.code,{children:"Cargo.toml"})," files\nand the cargo registry,\nso no configuration files are required."]}),"\n",(0,t.jsx)(s.h3,{id:"versions-retrieved-from-the-cargo-registry-",children:"Versions retrieved from the cargo registry \ud83d\udc4d"}),"\n",(0,t.jsx)(s.p,{children:"Release-please considers a package \"published\" only when the relative git tag exists.\nRelease-please doesn't interact at all with cargo registries.\nHowever, some Rust projects don't create git tags.\nInstead, they just publish the package to crates.io."}),"\n",(0,t.jsx)(s.p,{children:"Release-plz looks at the cargo registry if the relative git tag doesn't exist,\nmaking it compatible with both workflows and with the majority of the Rust projects."}),"\n",(0,t.jsx)(s.h3,{id:"conventional-commits-arent-required-",children:"Conventional commits aren't required \ud83d\udc4d"}),"\n",(0,t.jsxs)(s.p,{children:["Release-please requires conventional commits to work.\nFor example, it only generates a release PR if your commit messages\nstart with ",(0,t.jsx)(s.code,{children:"fix:"}),", ",(0,t.jsx)(s.code,{children:"feat:"}),", or ",(0,t.jsx)(s.code,{children:"deps:"})," (there are some exceptions based on the language)."]}),"\n",(0,t.jsxs)(s.p,{children:["Release-plz, instead, generates a release PR for every commit affecting one of your packages,\nregardless of the commit message.\nRelease-plz also generates a release PR if you change the dependencies of your packages\n(either in the ",(0,t.jsx)(s.code,{children:"Cargo.toml"})," or in the ",(0,t.jsx)(s.code,{children:"Cargo.lock"})," files)."]}),"\n",(0,t.jsx)(s.h3,{id:"no-multiple-programming-languages-support-",children:"No multiple programming languages support \ud83d\udc4e"}),"\n",(0,t.jsx)(s.p,{children:"Release-please supports multiple programming languages, while release-plz only\nsupports Rust projects."}),"\n",(0,t.jsx)(s.h2,{id:"differences-with-other-rust-release-tools",children:"Differences with other Rust release tools"}),"\n",(0,t.jsx)(s.p,{children:"These are other release tools in the Rust ecosystem, but they primarily focus on\nthe CLI use case, while release-plz focuses mainly on CI."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/crate-ci/cargo-release",children:"cargo-release"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Bumps the version and publishes Rust packages from the CLI."}),"\n",(0,t.jsxs)(s.li,{children:["It supports automatic releases with ",(0,t.jsx)(s.code,{children:"cargo release --unpublished"})]}),"\n",(0,t.jsxs)(s.li,{children:["It doesn't have first-class support for changelogs.\nSee ",(0,t.jsx)(s.a,{href:"https://github.com/crate-ci/cargo-release/issues/231",children:"this"})," issue."]}),"\n",(0,t.jsx)(s.li,{children:"It supports hooks (release-plz doesn't)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/pksunkara/cargo-workspaces",children:"cargo-workspaces"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"It's a set of commands to manage cargo workspaces and their crates."}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"publish"})," command releases the packages from the CLI similarly to ",(0,t.jsx)(s.code,{children:"cargo-release"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/Byron/cargo-smart-release",children:"cargo-smart-release"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Updates and publishes packages from the CLI."}),"\n",(0,t.jsxs)(s.li,{children:["It's very similar to release-plz, but it is not meant to be run in CI (see\n",(0,t.jsx)(s.a,{href:"https://github.com/release-plz/release-plz/issues/13#issuecomment-1065790846",children:"this"}),"\ncomment from the author)."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);