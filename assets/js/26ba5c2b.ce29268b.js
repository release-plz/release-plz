"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[6528],{2741:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"github/persist-credentials","title":"Persist credentials","description":"Normally, release-plz uses the GitHub API to push commits, branches, and tags.","source":"@site/docs/github/persist-credentials.md","sourceDirName":"github","slug":"/github/persist-credentials","permalink":"/docs/github/persist-credentials","draft":false,"unlisted":false,"editUrl":"https://github.com/release-plz/release-plz/tree/main/website/docs/github/persist-credentials.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Security","permalink":"/docs/github/security"},"next":{"title":"Configuration","permalink":"/docs/config"}}');var n=s(4848),r=s(8453);const o={},c="Persist credentials",a={},l=[];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"persist-credentials",children:"Persist credentials"})}),"\n",(0,n.jsxs)(t.p,{children:["Normally, release-plz uses the GitHub API to push commits, branches, and tags.\nThis allows to set ",(0,n.jsx)(t.code,{children:"persist-credentials: false"})," in the\n",(0,n.jsx)(t.a,{href:"https://github.com/actions/checkout?tab=readme-ov-file#usage",children:"actions/checkout"}),"\nstep, which is a good security practice (the default is ",(0,n.jsx)(t.code,{children:"true"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:["However, you need to set ",(0,n.jsx)(t.code,{children:"persist-credentials: true"})," in the following cases:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"signed tags"}),": the GitHub API doesn't support signed tags, so if release-plz\ndetects that you sign tags (i.e. if ",(0,n.jsx)(t.code,{children:"git config --get tag.gpgSign"})," returns ",(0,n.jsx)(t.code,{children:"true"}),"),\nit will use the git CLI to push the signed tags.\nFor this reason, you must set ",(0,n.jsx)(t.code,{children:"persist-credentials: true"})," in the\n",(0,n.jsx)(t.code,{children:"actions/checkout"})," step of the job that runs ",(0,n.jsx)(t.code,{children:"release-plz release"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"git push"}),": after the release-plz step, you run additional steps that use the git CLI to\npush changes (e.g., update files in the release PR)."]}),"\n"]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["For more information on the security implications of ",(0,n.jsx)(t.code,{children:"persist-credentials"}),",\nsee the ",(0,n.jsx)(t.a,{href:"https://docs.zizmor.sh/audits/#artipacked",children:"zizmor documentation"}),"."]})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var i=s(6540);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);